<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lj</groupId>
    <artifactId>lj-shopmall</artifactId>
    <version>4.0</version>

    <name>lj-shop-mall</name>
    <url>http://www.jiahetech.com</url>
    <description>辣鸡商城</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <lj.version>4.0</lj.version>
        <spring-boot.version>2.6.3</spring-boot.version>
        <spring-cloud-alibaba.version>2021.0.1.0</spring-cloud-alibaba.version>
        <apache-dubbo.version>2.7.15</apache-dubbo.version>
        <seata.version>1.4.2</seata.version>
        <!--        <rocketmq.version>4.9.2</rocketmq.version>-->
        <bootstrap.version>3.1.1</bootstrap.version>
        <spring-boot.mybatis-plus.version>3.5.1</spring-boot.mybatis-plus.version>
        <tobato.version>1.27.2</tobato.version>
        <spring-boot-druid.version>1.2.6</spring-boot-druid.version>
        <commons.io.version>2.11.0</commons.io.version>
        <fastjson.version>1.2.79</fastjson.version>
        <fastjson2.version>2.0.2</fastjson2.version>
        <hutool-version>5.7.22</hutool-version>
        <mysql-connector-version>8.0.28</mysql-connector-version>
        <redisson.version>3.16.0</redisson.version>
        <lombok.version>1.18.24</lombok.version>
        <junit.version>4.13.1</junit.version>

        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <maven-compiler-plugin.version>2.6.7</maven-compiler-plugin.version>
        <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>

        <docker.image.prefix>registry.aliyuncs.com/linhuatest</docker.image.prefix>
        <!-- 推荐使用Harbor -->
        <docker-maven-plugin.version>1.2.2</docker-maven-plugin.version>
        <sonar.exclusions>lj-admin/**/*, lj-common-core/**/*</sonar.exclusions>
        <docker.baseImage>openjdk:8-jre-alpine</docker.baseImage>
        <docker.volumes>/tmp</docker.volumes>
        <docker.image.prefix>192.168.3.6:8080/matecloud</docker.image.prefix>
        <docker.java.security.egd>-Djava.security.egd=file:/dev/./urandom</docker.java.security.egd>
        <docker.java.opts>-Xms128m -Xmx128m</docker.java.opts>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot 依赖配置 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- SpringCloud Alibaba 微服务 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- io常用工具类 -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <!-- JSON 解析器和生成器 -->
            <!--            <dependency>-->
            <!--                <groupId>com.alibaba</groupId>-->
            <!--                <artifactId>fastjson</artifactId>-->
            <!--                <version>${fastjson.version}</version>-->
            <!--            </dependency>-->
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>


            <!-- hutool工具类 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-version}</version>
            </dependency>

            <!-- druid数据库连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${spring-boot-druid.version}</version>
            </dependency>

            <!-- 公共资源池 -->
            <!--            <dependency>-->
            <!--                <groupId>org.apache.commons</groupId>-->
            <!--                <artifactId>commons-pool2</artifactId>-->
            <!--                <version>${common-pool.version}</version>-->
            <!--            </dependency>-->

            <!-- FastDFS 分布式文件系统 -->
            <dependency>
                <groupId>com.github.tobato</groupId>
                <artifactId>fastdfs-client</artifactId>
                <version>${tobato.version}</version>
            </dependency>

            <!-- 持久层框架 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${spring-boot.mybatis-plus.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.zaxxer</groupId>
                        <artifactId>HikariCP</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- mysql连接 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-version}</version>
            </dependency>

            <!-- redisson缓存框架-->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>


            <!-- dubbo 2.7.x引入-->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${apache-dubbo.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${apache-dubbo.version}</version>
            </dependency>
            <!-- nacos 2.7.x引入-->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-registry-nacos</artifactId>
                <version>${apache-dubbo.version}</version>
            </dependency>

            <!-- dubbo 序列化框架kryo -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-serialization-kryo</artifactId>
                <version>${apache-dubbo.version}</version>
            </dependency>

            <!-- Seata分布式事务框架 -->
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-all</artifactId>
                <version>${seata.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bootstrap</artifactId>
                <version>${bootstrap.version}</version>
            </dependency>

            <dependency>
                <groupId>com.lj</groupId>
                <artifactId>lj-common-core</artifactId>
                <version>${lj.version}</version>
            </dependency>

            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <!--                <scope>provided</scope>-->
            </dependency>

            <!-- junit test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <modules>
        <module>lj-common</module>
        <module>lj-modules</module>
        <module>lj-dubbo-api</module>
    </modules>

    <packaging>pom</packaging>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>

        <!--        <resources>-->
        <!--            <resource>-->
        <!--                <directory>src/main/resources</directory>-->
        <!--            </resource>-->
        <!--            <resource>-->
        <!--                <directory>src/main/java</directory>-->
        <!--                <includes>-->
        <!--                    <include>**/*.xml</include>-->
        <!--                </includes>-->
        <!--            </resource>-->
        <!--        </resources>-->

        <!--        <pluginManagement>-->
        <!--            <plugins>-->
        <!--                <plugin>-->
        <!--                    <groupId>org.springframework.boot</groupId>-->
        <!--                    <artifactId>spring-boot-maven-plugin</artifactId>-->
        <!--                    <version>${maven-compiler-plugin.version}</version>-->
        <!--                    <configuration>-->
        <!--                        <fork>true</fork>-->
        <!--                        <finalName>${project.build.finalName}</finalName>-->
        <!--                    </configuration>-->
        <!--                    <executions>-->
        <!--                        <execution>-->
        <!--                            <goals>-->
        <!--                                <goal>repackage</goal>-->
        <!--                            </goals>-->
        <!--                        </execution>-->
        <!--                    </executions>-->
        <!--                </plugin>-->
        <!--                &lt;!&ndash; docker插件 &ndash;&gt;-->
        <!--                <plugin>-->
        <!--                    <groupId>com.spotify</groupId>-->
        <!--                    <artifactId>docker-maven-plugin</artifactId>-->
        <!--                    <version>1.2.2</version>-->
        <!--                    <configuration>-->
        <!--                        <imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
        <!--                        &lt;!&ndash;docker文件所在的目录&ndash;&gt;-->
        <!--                        <dockerDirectory>src/main/docker</dockerDirectory>-->
        <!--                        <resources>-->
        <!--                            <resource>-->
        <!--                                <targetPath>/</targetPath>-->
        <!--                                <directory>${project.build.directory}</directory>-->
        <!--                                <include>${project.build.finalName}.jar</include>-->
        <!--                            </resource>-->
        <!--                        </resources>-->
        <!--                    </configuration>-->
        <!--                </plugin>-->
        <!--            </plugins>-->
        <!--        </pluginManagement>-->

        <!--        <plugins>-->
        <!--            <plugin>-->
        <!--                <groupId>com.spotify</groupId>-->
        <!--                <artifactId>docker-maven-plugin</artifactId>-->
        <!--                <version>${docker-maven-plugin.version}</version>-->
        <!--            </plugin>-->
        <!--            <plugin>-->
        <!--                <groupId>org.springframework.boot</groupId>-->
        <!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
        <!--            </plugin>-->
        <!--            <plugin>-->
        <!--                <artifactId>maven-compiler-plugin</artifactId>-->
        <!--&lt;!&ndash;                <version>${maven-compiler-plugin.version}</version>&ndash;&gt;-->
        <!--                <configuration>-->
        <!--                    <source>${java.version}</source>-->
        <!--                    <target>${java.version}</target>-->
        <!--                    <encoding>UTF-8</encoding>-->
        <!--                    <compilerArgs>-->
        <!--                        <arg>-parameters</arg>-->
        <!--                    </compilerArgs>-->
        <!--                </configuration>-->
        <!--            </plugin>-->
        <!--        </plugins>-->
    </build>

</project>
